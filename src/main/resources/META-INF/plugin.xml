<idea-plugin>
  <id>org.psliwa.idea.composer</id>
  <name>PHP composer.json support</name>
  <version>1.0.37</version>
  <vendor email="me@psliwa.org" url="https://github.com/psliwa/idea-composer-plugin">psliwa</vendor>

    <description><![CDATA[
<h1>PHP composer.json support</h1>
<br />
<b>Donate</b> using <a href="https://www.paypal.me/psliwa">PayPal</a> or <a href="https://blockchain.info/address/1Q6f6ZAqYFVzSaBf9AZJ6Ba948jjmQJU4A">Bitcoin</a>
<br /><br />

This plugin adds auto completion and inspections support for composer.json file in PHP projects.
    ]]></description>

  <change-notes><![CDATA[
<h2>1.0.37</h2>
<ul>
  <li>Support for aliases in "scripts"</li>
  <li>[#88] Update GNU licenses SPDX license identifiers</li>
</ul>

<h2>1.0.36</h2>
<ul>
  <li>[#89] Fix php callback inspection for "scripts"</li>
  <li>Reference support for "scripts"</li>
  <li>[#87] New quick-fix: Replace unbounded version constraint by already installed package version</li>
</ul>

<h2>1.0.35</h2>
<ul>
  <li>[#34] Optimizations for version suggestions</li>
  <li>[#71] Explicitly skip http request for private packagist, fix satis support</li>
  <li>[#72] Skip asking for version for built-in packages</li>
  <li>Visualise packages replaced by other package</li>
  <li>[#75] Fix navigation to package sources</li>
</ul>

<h2>1.0.34</h2>
<ul>
  <li>[#85] Fix memory issue in 1.0.32 version</li>
  <li>[#65, #48, #66, #67] Restore fixes from 1.0.32 version</li>
</ul>

<h2>1.0.33</h2>
<ul>
  <li>[#85] Revert to 1.0.31 version because of possible memory issues in specific cases</li>
</ul>

<h2>1.0.32</h2>
<ul>
  <li>[#65] Fix misconfiguration inspection when license is an array</li>
  <li>[#48] Do not produce warning for dev-master version for roave/security-advisories package</li>
  <li>[#66] Preserve ordering for excludedPackages in settings</li>
  <li>[#67] Do not show "package is not installed" warning when package is replaced by other package</li>
  <li>Update composer-schema.json and improve filepath inspections</li>
</ul>

<h2>1.0.31</h2>
<ul>
  <li>[#84] Fix packages installation</li>
</ul>

<h2>1.0.30</h2>
<ul>
  <li>[#83] Skip info annotations in batch mode</li>
</ul>

<h2>1.0.29</h2>
<ul>
  <li>[#80] Fix semantic versions ordering in versions suggestions</li>
</ul>

<h2>1.0.28</h2>
<ul>
  <li>[#79] Switch from scala-parser-combinators to spray-json</li>
  <li>Add plugin icon</li>
</ul>

<h2>1.0.27</h2>
<ul>
  <li>[#78] Fix exception in PackageReferenceProvider</li>
</ul>

<h2>1.0.26</h2>
<ul>
  <li>[#74] Fix support for 2019.1 (EAP)</li>
</ul>

<h2>1.0.25</h2>
<ul>
  <li>[#51] Fix NullPointerException during browsing local history</li>
  <li>[#56] Append backslashes automatically for namespace completion</li>
  <li>[#50] Change SchemaInspection short name in order to avoid conflicts with the other plugins</li>
  <li>[#54] Configurable composer options for package installation</li>
  <li>[#58] Add custom user-agent for http requests</li>
</ul>

<h2>1.0.24</h2>
<ul>
  <li>There is no any new feature or bug fix - only charity action summary.</li>
</ul>

<h2>1.0.23</h2>
<ul>
  <li>[#52] Add scripts-descriptions to Composer schema</li>
</ul>

<h2>1.0.22</h2>
<p>skipped</p>

<h2>1.0.21</h2>
<ul>
  <li>[#44] Timeouts for fetching data via http</li>
</ul>

<h2>1.0.20</h2>
<ul>
  <li>Composer icons for composer.json and composer.lock files</li>
  <li>Treat composer.lock as json file</li>
</ul>
<h2>1.0.19</h2>
<ul>
  <li>[#36] do not offer custom repositories for official repository</li>
  <li>[#39] fix possible NullPointerException - problem with concurrent access to cache</li>
  <li>Update composer-schema.json file version</li>
</ul>
<h2>1.0.18</h2>
<ul>
  <li>[#38] Fix packages names completion after reaching "/" char</li>
</ul>
<h2>1.0.17</h2>
<ul>
  <li>[#37] Fix inspections for scripts</li>
</ul>
<h2>1.0.16</h2>
<ul>
  <li>[#33, #17] Fix NullPointerExceptions</li>
  <li>update composer-schema.json file version</li>
</ul>
<h2>1.0.15</h2>
<ul>
  <li>[#32] Fix email format inspection</li>
</ul>
<h2>1.0.14</h2>
<ul>
  <li>[#30] add support for support.rss and config.sort-packages properties</li>
  <li>update composer-schema.json</li>
</ul>
<h2>1.0.13</h2>
<ul>
  <li>[#24] support for packagist custom repositories</li>
  <li>minor bug fixes for package versions quick fixes and inspections</li>
  <li>update composer-schema.json</li>
</ul>

<h2>1.0.12</h2>
<ul>
  <li>[#28] make "name" and "description" properties once again required only for library</li>
</ul>

<h2>1.0.11</h2>
<ul>
  <li>[#27] enhance misconfiguration inspections + quick fixes</li>
  <li>[#25] navigate to package documentation through clicking package version (ctrl+LMB / cmd+LMB) and get custom documentation url from composer.lock if available</li>
  <li>add support for new composer.json properties</li>
  <li>enable package version inspections and quickfixes by default</li>
</ul>

<h2>1.0.10</h2>
<ul>
  <li>[#23] fix plugin settings</li>
</ul>

<h2>1.0.9</h2>
<ul>
  <li>[#22] Support for "path" repository path + code completion</li>
  <li>Update composer-schema.json file - support for new composer features</li>
  <li>Minor fixes (messages, refactorings etc.)</li>
</ul>

<h2>1.0.8</h2>
<ul>
  <li>[#16] Fix cache invalidation bug</li>
  <li>[#14] "name" and "description" property are required only when package type is "project"</li>
  <li>fix "set property value" quick fix</li>
</ul>

<h2>1.0.7</h2>
<ul>
  <li>[#10] Fix inspection and quick fixes for relative file paths</li>
  <li>Support for completion inline repositories that are defined in "repositories" property as "package" repo type</li>
  <li>Add support for new properties in composer.json file + update descriptions etc.</li>
  <li>Support for named repositories completion and inspections</li>
  <li>Schema inspection messages fixes</li>
</ul>

<h2>1.0.6</h2>
<ul>
  <li>[#7] Fix NullPointerException in files other than composer.json</li>
  <li>Fix NullPointerException while rendering current installed package version in erased file</li>
</ul>

<h2>1.0.5</h2>
<ul>
  <li>[#6] External docs (shift+f1) for packages</li>
  <li>External docs (shift+f1) and quick docs (ctrl+q) for properties</li>
  <li>Version inspections also work in require-dev property</li>
</ul>

<h2>1.0.4</h2>
<ul>
  <li>BETA: Custom repositories support in packages and versions code completion. "composer" repository type is only supported right now, so satis is supported as well. You should enable this feature explicitly for each composer.json file in notification that would be shown when you define custom repositories.</li>
  <li>Inspections for scripts correctness in "scripts" property</li>
</ul>

<h2>1.0.3</h2>
<ul>
  <li>quick fixes that refactor version constraints with "~" and "^" operators to readable equivalents, eg. ~1.2 to >=1.2 <2.0.0. It might be useful when you are not sure what is difference between ~1.2, ~1.2.0 or ^1.2.0 - you can use quick fix to show equivalent version and eventually refactor it.</li>
  <li>omit already existing properties in completion list</li>
  <li>add support for symfony specific properties in "extra" property</li>
</ul>

<h2>1.0.2</h2>
<ul>
  <li>show installed package version (from composer.lock) for currently focused package</li>
</ul>

<h2>1.0.1</h2>
<ul>
  <li>desc sorting of package versions in completion</li>
  <li>improve "next significant release" operators in versions completion</li>
  <li>[#4] support for stability in versions completion</li>
  <li>"already defined property" inspection + quick fix</li>
  <li>completion for repositories in "repositories" property</li>
  <li>[#3] add "proprietary" license to completion</li>
</ul>

<h2>1.0.0</h2>
<ul>
  <li>detect not installed packages + install quick fix - so new packages could be installed from composer.json file. Inspection analyses proper composer.lock file, not "vendor" dir content.</li>
  <li>[#2] completion + reference support for class and static method names in "scripts" property</li>
  <li>completion + reference support for namespaces eg. in "autoload.psr-0" property</li>
  <li>minior enhancements and fixes for schema completion</li>
  <li>new quick fix for invalid "enum" property value</li>
  <li>support for go to urls and emails eg. in "homepage"</li>
</ul>

<h2>0.2.2</h2>
<ul>
  <li>detect unbound version constraints (as inspection) + quick fixes (<a href="https://getcomposer.org/doc/faqs/why-are-unbound-version-constraints-a-bad-idea.md">composer faq</a>)</li>
  <li>detect version constraints combining wildcard and comparisons (as inspection) + quick fixes (<a href="https://getcomposer.org/doc/faqs/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md">composer faq</a>)</li>
</ul>

<h2>0.2.1</h2>
<ul>
  <li>"go to" feature: filepaths (e.g. in "bin") and packages (e.g. in "require") are clickable (CTRL+LMB)</li>
  <li>"create property" quick fix for required properties (e.g. name and authors.name)</li>
  <li>"misconfiguration" inspection - currently there is one misconfiguration detected: not stable project without enabled "prefer-stable" + quick fixes</li>
</ul>

<h2>0.2.0</h2>
<ul>
  <li>Inspections</li>
  <li>composer.json schema validation + related "quick fixes"</li>
  <li>Inspections for filepath existence (for "bin" etc properties) + related "quick fixes": remove entry, create file/directory</li>
  <li>Display property description in completion list</li>
  <li>Minor completion bug fixes</li>
</ul>

<h2>0.1.2</h2>
<ul>
  <li>Generic completion usability improvements</li>
  <li>UI improvements</li>
  <li>Completion for package versions supports ranges (>=, -, comma etc), next significant release markers
  (~, ^), wildcard (*) etc</li>
  <li>Support for filepath completion in bin, autoload etc</li>
  <li>Performance and bug fixes</li>
</ul>

<h2>0.1.1</h2>
<ul>
  <li>Performance improvements - versions completion caching + prefetching packages form packagist.org</li>
</ul>

<h2>0.1.0</h2>
<ul>
  <li>Property names and values auto completion based on enhanced composer.json schema</li>
  <li>Package names and versions auto completion in require, require-dev etc. properties</li>
</ul>
  ]]></change-notes>

    <idea-version since-build="192.0"/>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.jetbrains.php</depends>

    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable instance="org.psliwa.idea.composerJson.settings.ComposerJsonConfigurable"
                             id="ComposerJson.settings" />
        <projectService serviceImplementation="org.psliwa.idea.composerJson.settings.ProjectSettings"/>
        <applicationService serviceImplementation="org.psliwa.idea.composerJson.settings.AppSettings"/>
        <fileTypeFactory implementation="org.psliwa.idea.composerJson.intellij.filetype.ComposerJsonFileTypeFactory"/>
        <completion.contributor language="JSON"
                                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.schema.CompletionContributor"/>
        <completion.contributor language="JSON"
                                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.composer.CompletionContributor"/>
        <localInspection
                bundle="org.psliwa.idea.composerJson.messages.ComposerBundle"
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.schema.SchemaInspection"
                displayName="JSON schema"
                shortName="ComposerJsonSchema"
                level="ERROR"
                enabledByDefault="true"
                groupKey="inspection.group"
                hasStaticDescription="true"
                />
        <localInspection
                bundle="org.psliwa.idea.composerJson.messages.ComposerBundle"
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection"
                displayName="File paths"
                enabledByDefault="true"
                level="WARNING"
                groupKey="inspection.group"
                hasStaticDescription="true"
                />
        <localInspection
                bundle="org.psliwa.idea.composerJson.messages.ComposerBundle"
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.composer.MisconfigurationInspection"
                displayName="Misconfigurations"
                enabledByDefault="true"
                level="WEAK WARNING"
                groupKey="inspection.group"
                hasStaticDescription="true"
                />
        <localInspection
                bundle="org.psliwa.idea.composerJson.messages.ComposerBundle"
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.composer.NotInstalledPackageInspection"
                displayName="Not installed package"
                enabledByDefault="true"
                level="WEAK WARNING"
                groupKey="inspection.group"
                hasStaticDescription="true"
                />
        <localInspection
                bundle="org.psliwa.idea.composerJson.messages.ComposerBundle"
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.composer.infoRenderer.PackageInfoInspection"
                displayName="Package info renderer"
                enabledByDefault="true"
                level="WEAK WARNING"
                groupKey="inspection.group"
                hasStaticDescription="true"
                />
        <annotator
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.composer.PackageVersionAnnotator"
                />
        <annotator
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.composer.RepositoryUpdater"
                />
        <annotator
                language="JSON"
                implementationClass="org.psliwa.idea.composerJson.intellij.codeAssist.php.PhpCallbackAnnotator"
                />
        <psi.referenceContributor
                language="JSON"
                implementation="org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathReferenceContributor"
                />
        <psi.referenceContributor
                language="JSON"
                implementation="org.psliwa.idea.composerJson.intellij.codeAssist.file.UrlReferenceContributor"
                />
        <psi.referenceContributor
                language="JSON"
                implementation="org.psliwa.idea.composerJson.intellij.codeAssist.php.PhpReferenceContributor"
                />
        <psi.referenceContributor
                language="JSON"
                implementation="org.psliwa.idea.composerJson.intellij.codeAssist.scripts.ScriptsReferenceContributor"
        />
        <editorNotificationProvider
                implementation="org.psliwa.idea.composerJson.intellij.codeAssist.composer.CustomRepositoriesEditorNotificationProvider"
                />
        <documentationProvider implementation="org.psliwa.idea.composerJson.intellij.codeAssist.composer.PackageDocumentationProvider"
                />
        <documentationProvider implementation="org.psliwa.idea.composerJson.intellij.codeAssist.schema.SchemaDocumentationProvider"
                />
        <json.catalog.exclusion implementation="org.psliwa.idea.composerJson.intellij.codeAssist.ComposerJsonSchemaExclusion"
                />
    </extensions>

    <application-components>
        <component>
            <implementation-class>org.psliwa.idea.composerJson.intellij.codeAssist.composer.PackagesLoader</implementation-class>
        </component>
        <component>
            <implementation-class>org.psliwa.idea.composerJson.composer.InstalledPackagesWatcher</implementation-class>
        </component>
        <component>
            <implementation-class>org.psliwa.idea.composerJson.intellij.codeAssist.composer.infoRenderer.PackageInfoOverlay</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>org.psliwa.idea.composerJson.intellij.NotificationsHandler</implementation-class>
        </component>
    </project-components>

    <actions>
    </actions>

</idea-plugin>
